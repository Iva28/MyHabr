using System;
using System.Collections.Generic;
using System.Linq;
using MyHabr.Models;

namespace MyHabr.Services
{
    public class PostService : IPostService
    {
        private HabrDbContext context;

        public PostService(HabrDbContext context)
        {
            this.context = context;
        }

        public void Initialize()
        {
            if (context.Posts.Count() == 0 && context.Users.Count() == 0)
            {
                context.Users.Add(new User()
                {
                    Email = "user@mail.ru",
                    Login = "user",
                    Password = "user",
                    RegistrationDate = DateTime.Now,
                    Avatar = "http://romanroadtrust.co.uk/wp-content/uploads/2018/01/profile-icon-png-898-300x300.png"
                });
                context.SaveChanges();

                context.Posts.AddRange(
                new List<Post>()
                {
                    new Post(){
                        Title = "Любая интернет-компания обязана тайно изменить программный код по требованию властей",
                        Preview = "6 декабря 2018 года парламент Австралии принял Assistance and Access Bill 2018 — поправки к Telecommunications Act 1997 о правилах оказания услуг электросвязи.",
                        Text = "Говоря юридическим языком, эти поправки «устанавливают нормы для добровольной и обязательной помощи телекоммуникационных компаний правоохранительным " +
                    "органам и спецслужбам в отношении технологий шифрования после получения запросов на техническую помощь».По сути это аналог российского «закона Яровой», который требует от интернет-компаний обязательной расшифровки трафика по запросу правоохранительных органов. " +
                    "В отдельных моментах австралийский закон даже более суровый, чем российский. " +
                    "Некоторые эксперты недоумевают, как такое законодательство вообще могло быть принято в демократической стране и называют его «опасным прецедентом».",
                        Date = DateTime.Now,
                        Image = "https://habrastorage.org/webt/sc/yp/80/scyp80qki4ltgtff4ddvrmxrdk4.png",
                        User = context.Users.FirstOrDefault()
                    },

                    new Post(){
                        Title = "Дизайн-дайджест: онбординг, фидбек, поиск идей и принятие решений",
                        Preview =  "Онбординг — это процесс, в рамках которого вы знакомите пользователя с вашим продуктом.Чаще всего онбординг осуществляется тремя способами:" +
                    "1.Прежде чем пустить пользователя в систему, вы показываете несколько экранов, в которых объясняете суть вашего сервиса.Обычно, этот метод используется в мобильных приложениях, " +
                    "когда вам показывается картинка и поясняющий текст.Да, это те самые экраны, которые мы пролистываем, а потом пытаемся разобраться в интерфейсе самостоятельно.",

                        Text =  "2. Вы можете пошагово помочь пользователю совершить первые действия. Basecamp по входу в систему предлагает создать первый проект, запрашивая название, сроки и документы. Pinterest предлагает подписаться на интересные темы, а Apple Music на любимых исполнителей. Таким образом формируется персональная лента, и продукт становится новому пользователю ближе." +
                    "3.Вы можете и вовсе не использовать пошаговые сценарии и, вместо этого, на каждом экране выдавать контекстные подсказки.Например, когда пользователь впервые попадает на страницу заказов, вы можете указать на ключевые элементы(кнопку создания заказа, фильтры, список)." +
                    "Все эти действия обучают нового пользователя и вовлекают его в процесс использования сервиса.А, чем лучше новый пользователь обучен и вовлечен, тем меньше вероятность, что он уйдет.Поиск идей" +
                    "Дэвид Огилви считает, что великие идеи приходят из подсознания, поэтому в своей книге “О рекламе” он советует периодически отключать процесс рационального мышления." +
                    "Например, отправиться на долгую прогулку, принять ванну или выпить рюмку / бокал любимого напитка." +
                    "Но, прежде чем сделать это, нужно наполнить мозг информацией о задаче, над которой вы работаете.Иначе к вам будут приходить идеи, не относящиеся к решаемой проблеме." +
                    "Я не раз замечал, что идеи часто приходят по пути в магазин, в душе или во время чтения.В эти моменты в голове начинается суматоха, в которой хаотично появляются разные мысли.Некоторые соединяются с другими и получаются суперидеи.Главное — успеть их записать." +
                    "Именно поэтому, личные проблемы могут мешать развитию карьеры, так как будут отвлекать от рабочих задач.Видимо, поэтому, многим лидерам присущи эгоистические черты, которые позволяют не обращать внимание на чувства других людей и полностью фокусироваться на профессиональных задачах." +
                    "Если подвести итог, то поиск креативных идей выполняется в три шага:" +
                    "1.Изучить всю доступную информацию по стоящей перед вами задаче." +
                    "2.Отвлечься на какое - либо занятие, не требующее интеллектуальной нагрузки." +
                    "3.Дать мыслям блуждать и не упустить пришедшие идеи.",

                        Date = DateTime.Now,
                        Image = "https://habrastorage.org/webt/go/dv/qj/godvqj9smomw8lpr4kiymtkxnzg.jpeg",
                        User = context.Users.FirstOrDefault()
                    }

               });
                context.SaveChanges();
            }
        }

        public List<Post> GetAllPosts()
        {
            return context.Posts.ToList();
        }

        public Post GetPost(int id)
        {
            return GetAllPosts().Find(p => p.Id == id);
        }

        public void AddComment(int userId, int postId, string text)
        {
            var comment = new Comment();
            comment.Post = context.Posts.Find(postId);
            comment.User = context.Users.Find(userId);
            comment.Text = text;
            //comment.Date = DateTime.Now; //default in database
            context.Comments.Add(comment);
            context.SaveChanges();
        }

        public Post AddPost(int userId, string title, string preview, string text, string img)
        {
            var post = new Post();
            post.User = context.Users.Find(userId);
            post.Title = title;
            post.Preview = preview;
            post.Text = text;
            post.Image = img;
            //post.Date = DateTime.Now; //default in database
            context.Posts.Add(post);
            context.SaveChanges();
            return post;
        }
    }
}
